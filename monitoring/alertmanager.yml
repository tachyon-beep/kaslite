global:
  # Slack webhook URL (replace with your actual webhook)
  slack_api_url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  # Email SMTP configuration (uncomment and configure as needed)
  # smtp_smarthost: 'localhost:587'
  # smtp_from: 'kaslite-alerts@yourdomain.com'

route:
  group_by: ["alertname", "experiment_id"]
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: "web.hook"
  routes:
    - match:
        severity: critical
      receiver: "critical-alerts"
    - match:
        severity: warning
      receiver: "warning-alerts"

receivers:
  - name: "web.hook"
    webhook_configs:
      - url: "http://127.0.0.1:5001/"

  - name: "critical-alerts"
    slack_configs:
      - api_url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
        channel: "#kaslite-alerts"
        title: "üö® CRITICAL: Kaslite Morphogenetic Engine Alert"
        text: |
          **Alert:** {{ .GroupLabels.alertname }}
          **Experiment:** {{ .GroupLabels.experiment_id }}
          **Severity:** {{ .CommonLabels.severity }}
          **Description:** {{ range .Alerts }}{{ .Annotations.description }}{{ end }}
        send_resolved: true
    # Uncomment for email notifications
    # email_configs:
    #   - to: 'alerts@yourdomain.com'
    #     subject: 'CRITICAL: Kaslite Alert - {{ .GroupLabels.alertname }}'
    #     body: |
    #       Alert: {{ .GroupLabels.alertname }}
    #       Experiment: {{ .GroupLabels.experiment_id }}
    #       Description: {{ range .Alerts }}{{ .Annotations.description }}{{ end }}

  - name: "warning-alerts"
    slack_configs:
      - api_url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
        channel: "#kaslite-alerts"
        title: "‚ö†Ô∏è WARNING: Kaslite Morphogenetic Engine Alert"
        text: |
          **Alert:** {{ .GroupLabels.alertname }}
          **Experiment:** {{ .GroupLabels.experiment_id }}
          **Severity:** {{ .CommonLabels.severity }}
          **Description:** {{ range .Alerts }}{{ .Annotations.description }}{{ end }}
        send_resolved: true

inhibit_rules:
  - source_match:
      severity: "critical"
    target_match:
      severity: "warning"
    equal: ["alertname", "experiment_id"]
