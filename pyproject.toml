[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "morphogenetic-engine"
description = "A morphogenetic neural network architecture with adaptive seed germination"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "John", email = "john@foundryside.dev"},
]
dynamic = ["version"]
dependencies = [
    "torch>=1.9.0",
    "numpy>=1.20.0",
    "scikit-learn>=1.0.0",
    "rich>=10.0.0",
    "pyyaml>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "pylint",
    "mypy",
]

[project.scripts]
morphogenetic-sweep = "morphogenetic_engine.cli.sweep:main"
morphogenetic-reports = "morphogenetic_engine.cli.reports:main"

# Pylint configuration for ML projects
[tool.pylint.messages_control]
disable = [
    "invalid-name",           # Allow X, y, etc. (ML convention)
]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.design]
max-args = 15
max-locals = 25
max-statements = 80
max-branches = 20

# Allow single-letter variable names common in ML
[tool.pylint.basic]
good-names = ["X", "y", "i", "j", "k", "n", "x", "z", "lr", "w", "b"]

# Black code formatting
[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.vscode
  | __pycache__
  | build
  | dist
  | env
)/
'''

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["morphogenetic_engine"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Allow untyped defs in ML code
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "sklearn.*",
    "numpy.*",
    "matplotlib.*",
]
ignore_missing_imports = true

[tool.setuptools.packages.find]
include = ["morphogenetic_engine*"]
